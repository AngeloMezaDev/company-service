plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'  
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.diffplug.eclipse.apt' version '3.44.0'
}

group = 'com.management'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot starters
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'jakarta.validation:jakarta.validation-api'
    
    // Database
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-sqlserver'
    runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc'
    
    // MapStruct
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    
    // Test dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs.addAll(['-parameters'])
}

tasks.withType(GroovyCompile).configureEach {
    groovyOptions.parameters = true
}
compileJava {
    options.compilerArgs = [
        '-parameters',
        '-Amapstruct.defaultComponentModel=spring',
        '-Amapstruct.unmappedTargetPolicy=IGNORE'
    ]
    options.encoding = 'UTF-8'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    inputs.files(tasks.processResources)
}

compileTestJava {
    options.compilerArgs += ['-parameters']
    options.encoding = 'UTF-8'
}

bootRun {
    systemProperty 'spring.profiles.active', 'default'
}

processResources {
    filesMatching('application.yml') {
        expand(project.properties)
    }
}